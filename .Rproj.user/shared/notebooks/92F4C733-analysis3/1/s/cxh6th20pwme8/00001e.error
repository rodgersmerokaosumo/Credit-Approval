{"frames":[{"func":"predict(model, newdata = test_data, type = \"response\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.glm(model, newdata = test_data, type = \"response\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.lm(object, newdata, se.fit, scale = 1, type = if (type == \n    \"link\") \"response\" else type, terms = terms, na.action = na.action)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame(Terms, newdata, na.action = na.action, xlev = object$xlevels)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame.default(Terms, newdata, na.action = na.action, xlev = object$xlevels)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(sprintf(ngettext(length(m), \"factor %s has new level %s\", \n    \"factor %s has new levels %s\"), nm, paste(nxl[m], collapse = \", \")), \n    domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in model.frame.default(Terms, newdata, na.action = na.action, xlev = object$xlevels) : \n  factor NAME_INCOME_TYPE has new levels Student\n"}